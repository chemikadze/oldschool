
;; Function int main() (main)

insn=6, live_throughout: 7, dead_or_set: 
insn=7, live_throughout: 7, dead_or_set: 0
insn=8, live_throughout: 7, dead_or_set: 0, 73
insn=9, live_throughout: 7, dead_or_set: 73
insn=10, live_throughout: 7, dead_or_set: 
insn=11, live_throughout: 7, dead_or_set: 0
insn=12, live_throughout: 7, dead_or_set: 76
insn=13, live_throughout: 7, dead_or_set: 76
insn=14, live_throughout: 7, dead_or_set: 0
insn=15, live_throughout: 7, dead_or_set: 
insn=16, live_throughout: 7, dead_or_set: 0
insn=17, live_throughout: 7, dead_or_set: 
insn=67, live_throughout: 7, dead_or_set: 
insn=48, live_throughout: 7, dead_or_set: 
insn=21, live_throughout: 7, dead_or_set: 70
insn=22, live_throughout: 7, dead_or_set: 69, 70
insn=23, live_throughout: 7, dead_or_set: 68, 69
insn=24, live_throughout: 7, dead_or_set: 67, 68
insn=25, live_throughout: 7, 67, dead_or_set: 66
insn=26, live_throughout: 7, 67, dead_or_set: 65, 66
insn=27, live_throughout: 7, 67, dead_or_set: 64, 65
insn=28, live_throughout: 7, 67, dead_or_set: 63, 64
insn=29, live_throughout: 7, 63, 67, dead_or_set: 62
insn=30, live_throughout: 7, 63, 67, dead_or_set: 61, 62
insn=31, live_throughout: 7, 63, 67, dead_or_set: 60, 61
insn=32, live_throughout: 7, 63, 67, dead_or_set: 59, 60
insn=33, live_throughout: 7, 59, 63, dead_or_set: 67
insn=34, live_throughout: 7, 59, dead_or_set: 63
insn=35, live_throughout: 7, dead_or_set: 59
insn=36, live_throughout: 7, dead_or_set: 
insn=37, live_throughout: 7, dead_or_set: 0
insn=38, live_throughout: 7, dead_or_set: 
insn=39, live_throughout: 7, dead_or_set: 
insn=41, live_throughout: 7, dead_or_set: 72
insn=42, live_throughout: 7, 72, dead_or_set: 77
insn=43, live_throughout: 7, 72, dead_or_set: 77
insn=44, live_throughout: 7, 72, dead_or_set: 0
insn=45, live_throughout: 7, 72, dead_or_set: 0, 78
insn=46, live_throughout: 7, 72, dead_or_set: 78, 79
insn=47, live_throughout: 7, 72, dead_or_set: 71, 79
insn=49, live_throughout: 7, dead_or_set: 71, 72
insn=50, live_throughout: 7, dead_or_set: 
insn=52, live_throughout: 7, dead_or_set: 58
insn=53, live_throughout: 7, dead_or_set: 58, 74
insn=57, live_throughout: 7, dead_or_set: 0, 74
insn=63, live_throughout: 0, 7, dead_or_set: 
changing reg in insn 52
changing reg in insn 53
changing reg in insn 32
changing reg in insn 35
changing reg in insn 31
changing reg in insn 32
changing reg in insn 30
changing reg in insn 31
changing reg in insn 29
changing reg in insn 30
changing reg in insn 28
changing reg in insn 34
changing reg in insn 27
changing reg in insn 28
changing reg in insn 26
changing reg in insn 27
changing reg in insn 25
changing reg in insn 26
changing reg in insn 24
changing reg in insn 33
changing reg in insn 23
changing reg in insn 24
changing reg in insn 22
changing reg in insn 23
changing reg in insn 21
changing reg in insn 22
changing reg in insn 47
changing reg in insn 49
changing reg in insn 41
changing reg in insn 49
changing reg in insn 8
changing reg in insn 9
changing reg in insn 53
changing reg in insn 57
changing reg in insn 12
changing reg in insn 13
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
deleting insn with uid = 8.
deleting insn with uid = 45.
deleting insn with uid = 46.
deleting insn with uid = 47.
deleting insn with uid = 53.
deleting insn with uid = 57.
;; Register dispositions:
58 in 0  59 in 0  60 in 0  61 in 0  62 in 0  63 in 2  
64 in 0  65 in 0  66 in 0  67 in 1  68 in 0  69 in 0  
70 in 0  71 in 0  72 in 3  73 in 0  74 in 0  76 in 0  
77 in 0  78 in 0  79 in 0  

;; Hard regs used:  0 1 2 3 6 7 17

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 44.


int main()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 6[bp] 7[sp] 17[flags]
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 73 76

;; Pred edge  ENTRY (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 ascii.cpp:7 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (const_int 255 [0xff])) 41 {*movsi_1} (nil))

(call_insn 7 6 9 2 ascii.cpp:7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znaj") [flags 0x41] <function_decl 0xb79920e0 operator new []>) [0 S1 A8])
            (const_int 4 [0x4]))) 612 {*call_value_0} (nil)
    (nil))

(insn 9 7 10 2 ascii.cpp:7 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 s+0 S4 A32])
        (reg/f:SI 0 ax [orig:73 D.2387 ] [73])) 41 {*movsi_1} (nil))

(insn 10 9 11 2 ascii.cpp:8 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0xb79e41a0>)) 41 {*movsi_1} (nil))

(call_insn 11 10 12 2 ascii.cpp:8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41] <function_decl 0xb79699a0 printf>) [0 S1 A8])
            (const_int 4 [0x4]))) 612 {*call_value_0} (nil)
    (nil))

(insn 12 11 13 2 ascii.cpp:9 (set (reg/f:SI 0 ax [76])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 s+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 13 12 14 2 ascii.cpp:9 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [76])) 41 {*movsi_1} (nil))

(call_insn 14 13 15 2 ascii.cpp:9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("gets") [flags 0x41] <function_decl 0xb79c5af0 gets>) [0 S1 A8])
            (const_int 4 [0x4]))) 612 {*call_value_0} (nil)
    (nil))

(insn 15 14 16 2 ascii.cpp:10 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2] <string_cst 0xb7910398>)) 41 {*movsi_1} (nil))

(call_insn 16 15 17 2 ascii.cpp:10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("puts") [flags 0x41] <function_decl 0xb7969e70 __builtin_puts>) [0 S1 A8])
            (const_int 4 [0x4]))) 612 {*call_value_0} (nil)
    (nil))

(insn 17 16 67 2 ascii.cpp:11 (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -16 [0xfffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) 41 {*movsi_1} (nil))

(jump_insn 67 17 68 2 (set (pc)
        (label_ref 39)) 416 {jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 [100.0%] 

(barrier 68 67 48)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 59 60 61 62 63 64 65 66 67 68 69 70

;; Pred edge  4
(code_label 48 68 20 3 3 "" [1 uses])

(note 20 48 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 3 ascii.cpp:12 (set (reg:SI 0 ax [orig:70 i.1 ] [70])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -16 [0xfffffff0])) [0 i+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 22 21 23 3 ascii.cpp:12 (parallel [
            (set (reg/f:SI 0 ax [orig:69 D.2395 ] [69])
                (plus:SI (reg:SI 0 ax [orig:70 i.1 ] [70])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -12 [0xfffffff4])) [0 s+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 180 {*addsi_1} (nil))

(insn 23 22 24 3 ascii.cpp:12 (set (reg:QI 0 ax [orig:68 D.2396 ] [68])
        (mem:QI (reg/f:SI 0 ax [orig:69 D.2395 ] [69]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 24 23 25 3 ascii.cpp:12 (set (reg:SI 1 dx [orig:67 D.2397 ] [67])
        (sign_extend:SI (reg:QI 0 ax [orig:68 D.2396 ] [68]))) 90 {extendqisi2} (nil))

(insn 25 24 26 3 ascii.cpp:12 (set (reg:SI 0 ax [orig:66 i.2 ] [66])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -16 [0xfffffff0])) [0 i+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 26 25 27 3 ascii.cpp:12 (parallel [
            (set (reg/f:SI 0 ax [orig:65 D.2399 ] [65])
                (plus:SI (reg:SI 0 ax [orig:66 i.2 ] [66])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -12 [0xfffffff4])) [0 s+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 180 {*addsi_1} (nil))

(insn 27 26 28 3 ascii.cpp:12 (set (reg:QI 0 ax [orig:64 D.2400 ] [64])
        (mem:QI (reg/f:SI 0 ax [orig:65 D.2399 ] [65]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 28 27 29 3 ascii.cpp:12 (set (reg:SI 2 cx [orig:63 D.2401 ] [63])
        (sign_extend:SI (reg:QI 0 ax [orig:64 D.2400 ] [64]))) 90 {extendqisi2} (nil))

(insn 29 28 30 3 ascii.cpp:12 (set (reg:SI 0 ax [orig:62 i.3 ] [62])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -16 [0xfffffff0])) [0 i+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 30 29 31 3 ascii.cpp:12 (parallel [
            (set (reg/f:SI 0 ax [orig:61 D.2403 ] [61])
                (plus:SI (reg:SI 0 ax [orig:62 i.3 ] [62])
                    (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -12 [0xfffffff4])) [0 s+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) 180 {*addsi_1} (nil))

(insn 31 30 32 3 ascii.cpp:12 (set (reg:QI 0 ax [orig:60 D.2404 ] [60])
        (mem:QI (reg/f:SI 0 ax [orig:61 D.2403 ] [61]) [0 S1 A8])) 50 {*movqi_1} (nil))

(insn 32 31 33 3 ascii.cpp:12 (set (reg:SI 0 ax [orig:59 D.2405 ] [59])
        (sign_extend:SI (reg:QI 0 ax [orig:60 D.2404 ] [60]))) 90 {extendqisi2} (nil))

(insn 33 32 34 3 ascii.cpp:12 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 1 dx [orig:67 D.2397 ] [67])) 41 {*movsi_1} (nil))

(insn 34 33 35 3 ascii.cpp:12 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 2 cx [orig:63 D.2401 ] [63])) 41 {*movsi_1} (nil))

(insn 35 34 36 3 ascii.cpp:12 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 0 ax [orig:59 D.2405 ] [59])) 41 {*movsi_1} (nil))

(insn 36 35 37 3 ascii.cpp:12 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (symbol_ref/f:SI ("*.LC2") [flags 0x2] <string_cst 0xb7910410>)) 41 {*movsi_1} (nil))

(call_insn 37 36 38 3 ascii.cpp:12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printf") [flags 0x41] <function_decl 0xb79699a0 printf>) [0 S1 A8])
            (const_int 16 [0x10]))) 612 {*call_value_0} (nil)
    (nil))

(insn 38 37 39 3 ascii.cpp:11 (parallel [
            (set (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -16 [0xfffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -16 [0xfffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 180 {*addsi_1} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  4 (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 71 72 77 78 79

;; Pred edge  3 (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 39 38 40 4 2 "" [1 uses])

(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 4 ascii.cpp:11 (set (reg:SI 3 bx [orig:72 i.0 ] [72])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -16 [0xfffffff0])) [0 i+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 42 41 43 4 ascii.cpp:11 (set (reg/f:SI 0 ax [77])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -12 [0xfffffff4])) [0 s+0 S4 A32])) 41 {*movsi_1} (nil))

(insn 43 42 44 4 ascii.cpp:11 (set (mem:SI (reg/f:SI 7 sp) [0 S4 A32])
        (reg/f:SI 0 ax [77])) 41 {*movsi_1} (nil))

(call_insn/u 44 43 49 4 ascii.cpp:11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0xb7964ee0 strlen>) [0 S1 A8])
            (const_int 4 [0x4]))) 612 {*call_value_0} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (nil)))

(insn 49 44 50 4 ascii.cpp:11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 3 bx [orig:72 i.0 ] [72])
            (reg:SI 0 ax [orig:71 D.2392 ] [71]))) 2 {*cmpsi_1_insn} (nil))

(jump_insn 50 49 51 4 ascii.cpp:11 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 401 {*jcc_1} (nil))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  3
;; Succ edge  5 (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 58 74

;; Pred edge  4 (fallthru)
(note 51 50 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 63 5 ascii.cpp:13 (set (reg:SI 0 ax [orig:58 D.2406 ] [58])
        (const_int 0 [0x0])) 41 {*movsi_1} (nil))

(insn 63 52 69 5 ascii.cpp:14 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 69 63 0 NOTE_INSN_DELETED)

