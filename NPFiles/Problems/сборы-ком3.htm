    <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
    <html>
    <head>
      <title>name</title>
      <meta http-equiv="Content-Type" content="text/html; charset=" />
      <meta name="description" content="Условия задач" />
      <link rel="stylesheet" type="text/css" href="statements_print.css" />
    </head>
    <body>
    <a name="top"></a>
    <p class="statements_title">Условия задач</p>
    <p class="statements_summary"></p>
    <div class="statements_info"><table>
    <tr>
    <td>Сайт:</td>
    <td><a href="http://informatics.mccme.ru/moodle">Дистанционная подготовка</a></td>
    </tr><tr>
    <td>Курс:</td>
    <td>Осень'07</td>
    </tr><tr>
    <td>statements:</td>
    <td>Условия задач</td>
    </tr><tr>
    <td>Printed by:</td>
    <td>Гость  </td>
    </tr><tr>
    <td>Date:</td>
    <td>Среда 9 Апрель 2008, 16:08</td>
    </tr>
    </table></div>

    <div class="statements_toc_alpha"><a name="toc"></a><p class="statements_chapter_title">List of problems</p><ul><li><a title="&lt;B&gt;Problem A.&lt;/B&gt; Восстановление графа" href="#ch446"><B>Problem A.</B> Восстановление графа</a></li><li><a title="&lt;B&gt;Problem B.&lt;/B&gt; Умывальники" href="#ch447"><B>Problem B.</B> Умывальники</a></li><li><a title="&lt;B&gt;Problem C.&lt;/B&gt; Лабиринт знаний" href="#ch448"><B>Problem C.</B> Лабиринт знаний</a></li><li><a title="&lt;B&gt;Problem D.&lt;/B&gt; Переселение" href="#ch449"><B>Problem D.</B> Переселение</a></li><li><a title="&lt;B&gt;Problem E.&lt;/B&gt; Костюмы" href="#ch450"><B>Problem E.</B> Костюмы</a></li><li><a title="&lt;B&gt;Problem F.&lt;/B&gt; Одностороннее движение" href="#ch451"><B>Problem F.</B> Одностороннее движение</a></li><li><a title="&lt;B&gt;Problem G.&lt;/B&gt; Премьер министр" href="#ch452"><B>Problem G.</B> Премьер министр</a></li><li><a title="&lt;B&gt;Problem H.&lt;/B&gt; Уборка снега" href="#ch453"><B>Problem H.</B> Уборка снега</a></li><li><a title="&lt;B&gt;Problem I.&lt;/B&gt; Highways" href="#ch454"><B>Problem I.</B> Highways</a></li><li><a title="&lt;B&gt;Problem J.&lt;/B&gt; Цветной дождь" href="#ch455"><B>Problem J.</B> Цветной дождь</a></li><li><a title="&lt;B&gt;Problem K.&lt;/B&gt; K задач" href="#ch456"><B>Problem K.</B> K задач</a></li></ul></div><div class="statements_chapter"><a name="ch446"></a><p class="statements_chapter_title"><B>Problem A.</B> Восстановление графа</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>Пусть нам известны степени (количество ребер, инцидентных данной вершине) всех вершин неориентированного графа. Требуется построить неориентированный граф без петель и кратных ребер с заданными степенями вершин или сказать, что это невозможно.
    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Первая строка входного файла содержит натуральное число N (1 &lt;= N &lt;= 500), а во второй строке N чисел - степени вершин.</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В первой строке выходного файла выдать слово 'Yes', если граф построить можно, или 'No', если нет. Если построить возможно, то выдать в следующей строке количество ребер, далее список ребер, заданных парой вершин.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>3<br>2<br>2<br>2<br></pre></td>
    		<td valign="top"><pre>Yes<br>3<br>1 2<br>1 3<br>2 3</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch447"></a><p class="statements_chapter_title"><B>Problem B.</B> Умывальники</p><table><tbody> 
  <tr> 
    <td width="80%">Имя входного файла: 
    </td> 
    <td width="20%">input.txt 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Имя выходного файла: 
    </td> 
    <td width="20%">output.txt 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Ограничение по времени: 
    </td> 
    <td width="20%">2 секунды 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Ограничение по памяти: 
    </td> 
    <td width="20%">64 MB 
    </td> 
  </tr></tbody> 
</table>
<p>Для того, чтобы отойти ко сну, живущему в ЛКШ мальчику Пете необходимо почистить зубы, вымыть ноги, принять душ и т.д., одним словом, посетить умывальник. Так случилось, что в корпусе, где он проживает, смонтировано лишь два умывальника. Вообще корпус представляет собой совокупность из N холлов, некоторые из которых соединены коридорами, причем, если по коридору можно пройти в одну сторону, это вовсе не означает, что можно пройти и в другую. Это фишка архитекторов.</p>
<p>Так как Петя идёт умываться после отбоя, он смертельно боится попасться на глаза воспитателям ЛКШ. Однако, как выяснилось, в каждом коридоре стоит ровно по одному воспитателю, причём каждый из них считает своим долгом при встрече Пети влепить ему наряд вне очереди. </p>
<p>Стоит отметить ещё одну немаловажную особенность корпуса, в котором живёт Петя: архитекторы оставили потайные ходы напрямую из каждого холла в оба умывальника, но т.к. существование этих ходов приравнивается руководством к красивой легенде, в случае пользования одним из них, Петя получит 10000 нарядов вне очереди.</p>
<p>Петя хочет узнать, получит ли он меньше нарядов вне очереди, если пойдёт в первый умывальник, нежели если он пойдёт во второй. Обратный путь его не интересует.</p>
<p></p>
<p><strong><i>Формат входных данных</i></strong></p>
<p>В первой строке входного файла четыре числа: N, S, V1, V2 (1 &lt;= N &lt;= 1000; 1 &lt;= S, V1, V2 &lt;= N), где N - общее количество холлов, S - номер холла, в котором Петя находится в начальный момент времени, V1, V2 - номера холлов, в которых располагаются умывальники. В следующих N строках по N чисел - 1 или 0. Стоящий в I-ой строке на J-ом месте 0 означает отсутствие коридора из I-го холла в J-ый, а стоящая 1 - присутствие.</p>
<p><strong><i>Формат выходных данных</i></strong></p>
<p></p>
<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-style: italic"><font face="Times New Roman"><font size="3">Вывести 1, если Петя сможет получить меньше нарядов вне очереди при использовании первого умывальника, нежели при использовании второго, или 0 в противном случае. </font></font></span> 
  <p></p> 
  <p><strong><em>Пример</em></strong></p> 
  <table><tbody> 
    <tr> 
      <td width="50%"><b>input.txt</b> 
      </td> 
      <td width="50%"><b>output.txt</b> 
      </td> 
    </tr> 
    <tr> 
      <td valign="top"><pre>4 1 2 3 <br />0 1 0 1 <br />0 0 0 0 <br />0 0 0 0 <br />0 0 1 0 </pre> 
      </td> 
      <td valign="top"><pre>1</pre> 
      </td> 
    </tr></tbody> 
  </table></p>
<p></p></div><div class="statements_chapter"><a name="ch448"></a><p class="statements_chapter_title"><B>Problem C.</B> Лабиринт знаний</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
В ЛКШ построили аттракцион "Лабиринт знаний". Лабиринт представляет собой N комнат, занумерованных от 1 до N, между некоторыми из которых есть двери. Когда человек проходит через дверь, показатель его знаний изменяется на определенную величину, фиксированную для данной двери. Вход в лабиринт находится в комнате 1, выход - в комнате N. Каждый ЛКШонок проходит лабиринт ровно один раз и попадает в группу в зависимости от набранных знаний (при входе в лабиринт этот показатель равен нулю). Ваша задача показать наилучший результат.    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Первая строка входного файла содержит целые числа N (1 &lt;= N &lt;= 2000) - количество комнат и M (1 &lt;= M &lt;= 10000) - количество дверей. В каждой из следующих M строк содержится описание двери - номера комнат, из которой она ведет и в которую она ведет, а также целое число, которое прибавляется к количеству знаний при прохождении через дверь (это число по модулю не превышает 10000). Двери могут вести из комнаты в нее саму, между двумя комнатами может быть более одной двери.</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В выходной файл выведите ":)" - если можно получить неограниченно большой запас знаний, ":(" - если лабиринт пройти нельзя, и максимальное количество набранных знаний в противном случае.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>2 2
1 2 5
1 2 -5
</pre></td>
    		<td valign="top"><pre>5</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch449"></a><p class="statements_chapter_title"><B>Problem D.</B> Переселение</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>В ЛКШ Витя решил переселять комнаты каждый месяц. Известно какая комната в какую переезжает. 
Требуется определить целое число лет, которое пройдет прежде чем все окажутся снова в своих комнатах.
    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Во входном файле записано N - количество комнат (1 < N < 101) и далее номера комнат, в которые переезжают 1, 2,3,..,N-я комнаты</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В выходной файл выведите количество лет, которое пройдет, прежде чем все снова окажутся в своих комнатах</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>7 2 3 1 5 6 7 4</pre></td>
    		<td valign="top"><pre>1</pre></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>2 2 1</pre></td>
    		<td valign="top"><pre>0</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch450"></a><p class="statements_chapter_title"><B>Problem E.</B> Костюмы</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
Команда ЛКШ по плаванию состоит из N игроков, известна базовая скорость каждого игрока Vi. В шкафчике находится K магических плавательных костюмов, про которые тренер пустил слух, что они дают бонус к скорости. Костюмы бывают двух типов - спецназовские костюмы с шипами дают процентный бонус, а обычные плавки дают количественный бонус. Мощность воздействия костюма описывается целым числом от 1 до 300. Для спецназовских костюмов оно показывает, на сколько процентов увеличится базовая скорость, а для плавок - на какую величину.</p>
<p>Требуется раздать плавательные костюмы так, чтобы суммарная скорость команды была максимальна. Ясно, что каждый игрок получает не больше одного костюма, если ему не достается костюма, то он идет в шапочке.
</p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>
В входном файле в первой строке записано число N (0 &lt;= N &lt;= 400) - число спортсменов, далее N чисел, которые описывают их базовые скорости (целое число от 1 до 10000). 
Далее записано число K (0 &lt;= K &lt;= 800) - количество костюмов, затем K пар целых чисел, описывающих соответствующую костюмы (тип и мощность). Тип пары описывается либо единичкой (спецназовские костюмы), либо двоечкой (плавки). 
    </p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В выходной файл вывести максимальную суммарную скорость команды с точностью до 4-х знаков.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>4
10 16 14 100
6
1 1
2 2
1 50
1 60
1 40
2 1
</pre></td>
    		<td valign="top"><pre>215.6</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch451"></a><p class="statements_chapter_title"><B>Problem F.</B> Одностороннее движение</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
В городе, построенном во времена средневековья, ширина улиц стала препятствовать движению транспорта, которое изначально было двусторонним по каждой из улиц. Для решения этой проблемы было предложено сделать движение по каждой из улиц односторонним. Мэр поручил эту задачу своему первому заму. После долгих размышлений тот доложил, что на некоторых улицах движение придется оставить двусторонним, в противном случае будет невозможно проехать из любого места в городе в любое другое. По данной схеме города требуется найти все такие улицы.     </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>В первой строке входного файла находятся числа N  - количество площадей в городе и М - количество улиц их соединяющих (1 &lt;= N &lt;= 20000, 1 &lt;= M &lt;= 200000). Площади имеют номера от 1 до N. В каждой из следующих M строк находится пара натуральных чисел, описывающая между какими двумя площадями проходит соответствующая улица (две площади соединяются не более чем одной улицей).</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>На первой строке выведите число B - количество улиц, на которых организовать одностороннее движение невозможно. На следующей строке выведите B целых чисел - номера этих улиц в возрастающем порядке. Улицы нумеруются с единицы в том порядке, в котором они заданы во входном файле.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>6 7
1 2
2 3
3 4
1 3
4 5
4 6
5 6
</pre></td>
    		<td valign="top"><pre>1
3</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch452"></a><p class="statements_chapter_title"><B>Problem G.</B> Премьер министр</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>Новый премьер-министр решил проехать по России от Москвы до Владивостока по железной дороге, а затем вернуться обратно. Он поручил своим помощникам разработать маршрут так, чтобы не пришлось два раза проезжать через один и тот же город. Однако помощники сообщили, что для Российских железных дорог это невозможно. Определите, в каких городах премьер-министр будет вынужден побывать дважды.
    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>В первой строке входного файла находятся числа N - количество российских городов, соединенных железными дорогами в единую сеть и М - количество железнодорожных перегонов, соединяющих пары городов (1 &lt;= N &lt;= 20000, 1 &lt;= M &lt;= 200000). Города имеют номера от 1 до N. В каждой из следующих M строк находится пара натуральных чисел, описывающая между какими двумя городами проходит соответствующая железнодорожная ветка. В последней строке находятся два целых числа S и Е (1 &lt;= S != E &lt;= N) - номера Москвы и Владивостока по версии РЖД.
</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В первой строке выведите число B - количество городов, которые премьер-министру придется посетить дважды. В следующих В строках выведите B целых чисел - номера этих городов в возрастающем порядке.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>3 2
1 2
2 3
3 1
</pre></td>
    		<td valign="top"><pre>1
2</pre></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>4 4
1 2
2 3
2 4
1 4
4 1
</pre></td>
    		<td valign="top"><pre>0</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch453"></a><p class="statements_chapter_title"><B>Problem H.</B> Уборка снега</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
Вася очень хочет попасть на сборы в СУНЦ и, к счастью, живет недалеко от него. Поэтому он решил дойти до места проведения сборов пешком. Васе известен план города - какие перекрестки соединены улицами и сколько времени требуется, чтобы пройти по каждой улице. Движение по любой улице разрешено в обе стороны.</p>
<p>Администрация города, однако, решила устроить в этот день уборку улиц от снега. Если на какой-то из улиц происходит уборка, то движение по ней замедляется в два раза. В распоряжении города есть K снегоуборочных машин.</p>
<p>Вася хочет добраться до места назначения как можно быстрее, однако у главы администрации есть с Васей старые счеты, поэтому он хочет максимально замедлить его движение. В результате всякий раз, когда Вася оказывается на перекрестке, глава администрации выбирает не более K улиц, на которых будет производиться уборка, пока Вася перемещается с текущего перекрестка до следующего.</p>
<p>Дом Васи находится около перекрестка с номером 1, а СУНЦ - около перекрестка с номером N. Таким образом, перемещение Васи от дома до СУНЦа выглядит следующим образом. В начале глава выбирает дороги, на которых будет проводиться уборка, затем Вася выбирает улицу, по которой он пойдет от перекрестка 1 (Вася достаточно наблюдателен, чтобы заметить, на каких улицах идет уборка). Когда он доходит до конца выбранной улицы и оказывается на перекрестке, процесс повторяется: глава вновь выбирает улицы для уборки, и машины туда мгновенно перемещаются, а затем Вася - улицу, по которой идти, и т. д. Процесс продолжается, пока Вася не попадет в СУНЦ.</p>
<p>Ваша задача - выяснить, за какое минимально возможное время Васе удастся достичь СУНЦа при условии, что глава администрации всегда действует оптимально.</p>
    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Первая строка входного файла содержит числа N - количество перекрестков в городе, M - количество улиц и K - количество снегоуборочных машин (1 &lt;= N &lt;= 100, 0 &lt;= K &lt;= M &lt;= 20000). Следующие M строк содержат описания улиц в следующем формате: a и b - номера перекрестков, которые данная улица соединяет, t - время движения по данной улице (целое положительное число, не превосходящее 1000).</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>Выведите в выходной файл одно число - минимальное время, за которое Вася может добраться до СУНЦа. или -1, если добраться туда невозможно.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>5 4 2
1 2 1
2 4 1
1 4 1
3 5 1
</pre></td>
    		<td valign="top"><pre>-1</pre></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>4 6 2
1 2 1
1 3 1
1 4 2
2 3 1
2 4 1
3 4 1
</pre></td>
    		<td valign="top"><pre>3</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch454"></a><p class="statements_chapter_title"><B>Problem I.</B> Highways</p><table><tbody> 
  <tr> 
    <td width="80%">Имя входного файла: 
    </td> 
    <td width="20%">input.txt 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Имя выходного файла: 
    </td> 
    <td width="20%">output.txt 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Ограничение по времени: 
    </td> 
    <td width="20%">2 секунды 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Ограничение по памяти: 
    </td> 
    <td width="20%">64 MB 
    </td> 
  </tr></tbody> 
</table>
<p>Остров народа Флатопии представляет собой часть плоскости. К сожалению, во Флатопии очень плохая система дорог. Правительство беспокоится об этой проблеме и уже построило несколько дорог, соединяющих наиболее важные города. Как всегда, остались города, до которых невозможно добраться по дорогам. Требуется построить новые дороги так, чтобы можно было проехать по дорогам от любого города до любого другого.</p>
<p>Города во Флатопии пронумерованы от 1 до N и город с номером i имеет декартовы координаты (xi, yi). Каждая дорога соединяет ровно два города. Все дороги (уже построенные и те, которые собираются построить) лежат на прямых линиях и их длина равна декартовому расстоянию между городами. Все дороги имеют двухстороннее движение. Дороги могут пересекаться, но водитель может переезжать с дороги на дорогу только в городах.</p>
<p>Правительство Флатопии хочет минимизировать стоимость постройки новых дорог. При этом, они хотят, чтобы все города были достижимы по дорогам. Так как Флатопия является плоской, то стоимость постройки дороги пропорциональна её длине. Поэтому, в целях экономии, требуется минимизировать суммарную длину построенных дорог.</p>
<p></p>
<p><strong><i>Формат входных данных</i></strong></p>
<p>Входной файл состоит из двух частей. Первая часть содержит информацию о городах Флатопии, а вторая о дорогах, которые уже построены.</p>
<p>Первая строка входного файла содержит единственное целое число N (1 &lt;= N &lt;= 750), обозначающее число городов. Следующие N строк содержат по два целых числа, xi и yi, разделённых пробелом. Эти числа являются координатами соответствующих городов (для i от 1 до N). Координаты по модулю не превосходят 10000. Никакие два города не совпадают.</p>
<p>Следующая строка содержит одно число M (0 &lt;= M &lt;= 1000), представляющее количество уже построенных дорог. Следующие M строк содержат по два целых числа, разделённых пробелом. Эти два числа обозначают пару городов, которые уже соединены дорогами. Каждая пара соединена не более чем одной дорогой.</p>
<p></p>
<p><strong><i>Формат выходных данных</i></strong></p>
<p>В выходной файл выведите дороги, имеющие минимальную возможную суммарную длину, которые требуется построить для соединения всех городов. Каждая дорога должна быть записана на отдельной строке в виде номеров соединённых городов, записанных через пробел. Если дорог строить не нужно, то выходной файл должен быть создан, но при этом остаться пустым. </p>
<p><strong><i>Пример</i></strong></p>
<table><tbody> 
  <tr> 
    <td width="50%"><b>input.txt</b> 
    </td> 
    <td width="50%"><b>output.txt</b> 
    </td> 
  </tr> 
  <tr> 
    <td valign="top"><pre>9 1 5 0 0 3 2 4 5 5 1 0 4 5 2 1 2 5 3 4 1 3 9 7 1 2 2 3 </pre> 
    </td> 
    <td valign="top"><pre>1 6 3 7 4 9 5 7 8 3 </pre> 
    </td> 
  </tr></tbody> 
</table></div><div class="statements_chapter"><a name="ch455"></a><p class="statements_chapter_title"><B>Problem J.</B> Цветной дождь</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
В Банановой республике очень много холмов, соединенных мостами. На химическом заводе произошла авария, в результате чего испарилось экспериментальное удобрение "зован". На следующий день выпал цветной дождь, причем он прошел только над холмами. В некоторых местах падали красные капли, в некоторых - синие, а в остальных - зеленые, в результате чего холмы стали соответствующего цвета. Президенту Банановой республики это понравилось, но ему захотелось покрасить мосты между вершинами холмов так, чтобы мосты были покрашены в цвет холмов, которые они соединяют. К сожалению, если холмы разного цвета, то покрасить мост таким образом не удастся. Посчитайте количество таких "плохих" мостов.    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>В первой строке записано N (0 < N <= 100) - число холмов. Далее идет матрица смежности, описывающая наличие мостов между холмами (1-мост есть, 0-нет). В последней строке записано N чисел, обозначающих цвет холмов: 1 - красный; 2 - синий; 3 - зеленый.</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>Выведите количество "плохих" мостов.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>7
0 1 0 0 0 1 1 
1 0 1 0 0 0 0 
0 1 0 0 1 1 0 
0 0 0 0 0 0 0 
0 0 1 0 0 1 0 
1 0 1 0 1 0 0 
1 0 0 0 0 0 0 

1 1 1 1 1 3 3
</pre></td>
    		<td valign="top"><pre>4</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch456"></a><p class="statements_chapter_title"><B>Problem K.</B> K задач</p><font size="2">Макисмальное время работы на одном тесте: 1 сек</font><br /><br /><em>K</em> участникам сборов для решения было предложено <i>K</i> задач. Участники решили разделить задачи между собой, решить каждому по одной задаче, а затем обменяться решениями (они не учли, что система ejudge способна отследить данный факт <font size="3" face="Wingdings">J</font><font size="3" face="Times New Roman">). Известно ориентировочное время, за которое каждый из участников сборов может решить каждую из предложенных задач.</font>
<p align="justify"> <font size="3" face="Times New Roman">Помогите участникам сборов распределить задачи так (по одной каждому участнику), чтобы суммарное время, потраченное на их решение было минимальным.</font></p>
<p><font size="3" face="Arial"><b><i>Формат входных данных</i></b></font></p>
<p><font size="3" face="Times New Roman">Во входном файле </font><font size="3" face="Courier New">input.txt</font><font size="3" face="Times New Roman"> сначала записано число <i>K</i> (0 &lt; <i>K</i> &lt; 101) и далее <i>K</i><sup>2</sup> неотрицательных целых чисел, не превосходящие 20000, описывающих матрицу <em>K </em>x </font><font size="3" face="Times New Roman"><em>K</em>, времен решения каждым из участников каждой из задач.</font></p>
<p><font size="3" face="Arial"><b><i>Формат выходных данных</i></b></font></p>
<p><font size="3" face="Times New Roman">В файл </font><font size="3" face="Courier New">ouput.txt</font><font size="3" face="Times New Roman"> выведите суммарное минимальное время решения всех задач, при условии, что каждый участник решит ровно одну задачу.</font></p><a name="0.1_table01"></a>
<div align="left">
  <table cellspacing="0" border="2"><tbody>
    <tr valign="top">
      <td width="49%"><font size="3" face="Courier New">input.txt</font>
      </td>
      <td width="50%"><font size="3" face="Courier New">output.txt</font>
      </td>
    </tr>
    <tr valign="top">
      <td><font size="3" face="Courier New">2</font>
        <p><font size="3" face="Courier New">1 2</font></p>
        <p><font size="3" face="Courier New">2 4</font></p>
      </td>
      <td><font size="3" face="Courier New">4</font>
      </td>
    </tr></tbody>
  </table></div></div></body> </html>