    <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
    <html>
    <head>
      <title>name</title>
      <meta http-equiv="Content-Type" content="text/html; charset=" />
      <meta name="description" content="Условия задач" />
      <link rel="stylesheet" type="text/css" href="statements_print.css" />
    </head>
    <body>
    <a name="top"></a>
    <p class="statements_title">Условия задач</p>
    <p class="statements_summary"></p>
    <div class="statements_info"><table>
    <tr>
    <td>Сайт:</td>
    <td><a href="http://informatics.mccme.ru/moodle">Дистанционная подготовка</a></td>
    </tr><tr>
    <td>Курс:</td>
    <td>Осень'07</td>
    </tr><tr>
    <td>statements:</td>
    <td>Условия задач</td>
    </tr><tr>
    <td>Printed by:</td>
    <td>Николай Соколов</td>
    </tr><tr>
    <td>Date:</td>
    <td>Четверг  10 Апрель 2008, 17:36</td>
    </tr>
    </table></div>

    <div class="statements_toc_alpha"><a name="toc"></a><p class="statements_chapter_title">List of problems</p><ul><li><a title="&lt;B&gt;Problem A.&lt;/B&gt; Коровы" href="#ch457"><B>Problem A.</B> Коровы</a></li><li><a title="&lt;B&gt;Problem B.&lt;/B&gt; План уничтожения" href="#ch458"><B>Problem B.</B> План уничтожения</a></li><li><a title="&lt;B&gt;Problem C.&lt;/B&gt; Цена и длина" href="#ch459"><B>Problem C.</B> Цена и длина</a></li><li><a title="&lt;B&gt;Problem D.&lt;/B&gt; Вполоборота" href="#ch460"><B>Problem D.</B> Вполоборота</a></li><li><a title="&lt;B&gt;Problem E.&lt;/B&gt; Нечётный N-угольник" href="#ch461"><B>Problem E.</B> Нечётный N-угольник</a></li><li><a title="&lt;B&gt;Problem F.&lt;/B&gt; Сокращение одночленов" href="#ch462"><B>Problem F.</B> Сокращение одночленов</a></li><li><a title="&lt;B&gt;Problem G.&lt;/B&gt; Слишком вложенные скобки" href="#ch463"><B>Problem G.</B> Слишком вложенные скобки</a></li><li><a title="&lt;B&gt;Problem H.&lt;/B&gt; Разнообразный куб" href="#ch464"><B>Problem H.</B> Разнообразный куб</a></li><li><a title="&lt;B&gt;Problem I.&lt;/B&gt; Пеленг НЛО" href="#ch465"><B>Problem I.</B> Пеленг НЛО</a></li></ul></div><div class="statements_chapter"><a name="ch457"></a><p class="statements_chapter_title"><B>Problem A.</B> Коровы</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
	Пете необходимо переправить стадо коров через болото. Для переправы можно использовать доски, которые соединяют кочки. После того, как на кочке кто-нибудь побывал, она тонет. Вам требуется переправить максимальное количество коров через болото. 
    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>
В первой строке входного файла записано число досок N (0 &lt;= N &lt;= 1000). Далее для каждой доски записаны координаты кочек - концов доски (-2<sup>31</sup> &lt;= X<sub>i</sub>,Y<sub>i</sub> &lt;= 2<sup>31</sup>). Затем записаны координаты начальной и конечной точек (точки различны и доски, их соединяющей нет). Все числа во входном файле целые.
</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>Вывести максимально количество коров, которых можно переправить</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=60%><b>input.txt</b></td>
    		<td width=40%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>8
0 0 1 0
1 0 2 1
1 0 2 -1
2 1 3 0
2 -1 3 0
1 0 4 0
3 0 4 0
0 0 3 0
0 0 4 0
</pre></td>
    		<td valign="top"><pre>2</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch458"></a><p class="statements_chapter_title"><B>Problem B.</B> План уничтожения</p><table><tbody> 
  <tr> 
    <td width="80%">Имя входного файла: 
    </td> 
    <td width="20%">input.txt 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Имя выходного файла: 
    </td> 
    <td width="20%">output.txt 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Ограничение по времени: 
    </td> 
    <td width="20%">2 секунды 
    </td> 
  </tr> 
  <tr> 
    <td width="80%">Ограничение по памяти: 
    </td> 
    <td width="20%">64 MB 
    </td> 
  </tr></tbody> 
</table>
<p>Секретный бункер уходит на N этажей вниз. Под нижним этажом бункера находится сверхсекретная лаборатория. Злобный диверсант хочет вывести лабораторию из строя, залив её водой (даже очень небольшого количества воды хватит, чтобы запоганить сверхточные приборы). Для этого он использует лужицы воды, остающиеся от жизнедеятельности обитателей бункера. В лужицах i-го этажа находится E<sub>i</sub> воды. Диверсанту известно, что если на нём скопится больше С<sub>i</sub> воды, то перегородка не выдержит и вся вода сольется на этаж ниже. Он может проделать отверстия в некоторых перегородках, по которым вода также стечет вниз. Проделать отверстие в полу i-го этажа стоит P<sub>i</sub> у.е. Помогите диверсанту уничтожить лабораторию с минимальными материальными затратами. </p>
<p><strong><i>Формат входных данных</i></strong></p>
<p>Первая строка входного файла содержит натуральное число N (1 &lt;= N &lt;= 50000) - количество этажей в бункере, в следующих N строках находятся тройки целых чисел C<sub>i</sub>, E<sub>i</sub>, P<sub>i</sub> (0 &lt; E<sub>i</sub> &lt;= C<sub>i</sub> &lt; 1000000; E<sub>1</sub>+E<sub>2</sub>+...+E<sub>N</sub> &lt; 2000000000; P<sub>i</sub> &gt; 0; P<sub>1</sub>+P<sub>2</sub>+...+P<sub>N</sub> &lt; 2000000000). Этажи нумеруются сверху вниз. </p>
<p><strong><i>Формат выходных данных</i></strong></p>
<p>В первой строке выходного файла выдать количество денег, которое придется потратить злобному диверсанту, в следующих строках выведите номера этажей, в полу которых следует проделать отверстия.</p>
<p><strong><i>Пример</i></strong></p>
<table><tbody> 
  <tr> 
    <td width="50%"><b>input.txt</b> 
    </td> 
    <td width="50%"><b>output.txt</b> 
    </td> 
  </tr> 
  <tr> 
    <td valign="top"><pre>4 1 1 1 1 1 3 3 1 2 3 1 10 </pre> 
    </td> 
    <td valign="top"><pre>3 1 3 </pre> 
    </td> 
  </tr></tbody> 
</table></div><div class="statements_chapter"><a name="ch459"></a><p class="statements_chapter_title"><B>Problem C.</B> Цена и длина</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
В саду растут деревья. У каждого есть цена и длина. Чтобы построить забор какой-то длины L, нужно срубить деревьев с суммарной длиной L или больше. Нужно, срубив некоторые деревья, построить забор вокруг оставшихся. При этом нужно потратить как можно меньше денег. Если таких способов несколько, нужно выбрать тот, в котором деревьев рубится меньше. Если и таких несколько, выведите любой. Деревья считаются имеющими нулевой радиус.    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Во входном файле записано число деревьев N (2 &lt;= N &lt;= 14), а затем каждое дерево описано четырьмя числами x<sub>i</sub>, y<sub>i</sub>, v<sub>i</sub>, l<sub>i</sub> - координаты (целые от -10000 до 10000), цена и длина (от 0 до 10000). </p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В выходной файл выведите номера деревьев, которые необходимо срубить, а также излишек срубленного материала. Формат выходных данных - см. примеры выходных файлов.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=40%><b>input.txt</b></td>
    		<td width=60%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>6
0  0  8  3
1  4  3  2
2  1  7  1
4  1  2  3
3  5  4  6
2  3  9  8
</pre></td>
    		<td valign="top"><pre>Cut these trees: 2 4 5 
Extra wood: 3.16
</pre></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>3
3  0 10  2
5  5 20 25
7 -3 30 32
</pre></td>
    		<td valign="top"><pre>Cut these trees: 2 
Extra wood: 15.00
</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch460"></a><p class="statements_chapter_title"><B>Problem D.</B> Вполоборота</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
Словом считается непустая последовательность больших и маленьких латинских букв. Вам необходимо развернуть все слова во входном файле задом наперед.    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Во входном файле записано все что угодно. Его размер не превышает 1 Мб.</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В выходном файле должен содержаться входной файл, в котором все слова развернуты. Все прочие символы, в том числе переводы строк, должны остаться нетронутыми.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=55%><b>input.txt</b></td>
    		<td width=55%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>Summer Informatics School.
Now in Perm!
</pre></td>
    		<td valign="top"><pre>remmuS scitamrofnI loohcS.
woN ni mreP!
</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch461"></a><p class="statements_chapter_title"><B>Problem E.</B> Нечётный N-угольник</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
Выпуклый N-угольник P преобразуется в N-угольник Q путём замены середин сторон исходного многоугольника P на вершины многоугольника Q. 
Требуется по выпуклому N-угольнику Q, заданному координатами вершин, восстановить координаты вершин исходного N-угольника P.    
<p><img src="http://informatics.mccme.ru/moodle/file.php/28/pic1.JPG"></p>

</p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Входной файл содержит нечётное число вершин N (3 &lt;= N &lt;= 999), за которым следуют целочисленные координаты xi yi вершин многоугольника Q, перечисленные в порядке обхода по часовой стрелке. Значения координат находятся в диапазоне от -20000 до 20000.
Все числа во входном файле целые и разделены произвольным количеством пробелов и/или символов перевода строки.
</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В выходном файле должны содержаться координаты вершин N-угольника P, перечисленные в порядке обхода по часовой стрелке. При этом первая и вторая вершина должны образовывать сторону, на которой лежит первая вершина N-угольника Q.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=55%><b>input.txt</b></td>
    		<td width=55%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>3
0 0
0 1
1 0
</pre></td>
    		<td valign="top"><pre>1 -1
-1 1
1 1
</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch462"></a><p class="statements_chapter_title"><B>Problem F.</B> Сокращение одночленов</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
Одночлен - это выражение, состоящее из однобуквенных переменных с операциями умножения и возведения в целочисленную степень. Именами переменных являются малые латинские буквы. Умножение обозначается символом '*' (ASCII 42), возведение в степень - символом '^' (ASCII 94). Показатель степени состоит из одной десятичной цифры от 1 до 9. Примеры одночленов: t, a*b*c^2, y*d^1*y^9.</p>
<p>Требуется по данным N + M одночленам построить дробь, равную произведению первых N одночленов, делённому на произведение оставшихся M одночленов. При этом:</p>
<p>1)	Числитель и знаменатель дроби должны быть одночленами.</p>
<p>2)	Переменная не должна встречаться в дроби более одного раза (т. е. дробь необходимо сократить).</p>
<p>3)	Степени переменных должны быть целыми числами большими или равными 2.</p>
<p>4)	В числителе и знаменателе переменные должны быть отсортированы по алфавиту.</p>

    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>
В первой строке входного файла содержатся числа N и M (1 &lt;= N, M &lt;= 999), разделённые пробелами.</p>
<p>Следующие N + M строк содержат по одному одночлену каждая. Длина каждой строки не превосходит 100 символов.</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В выходном файле должны быть две строки, содержащие соответственно числитель и знаменатель результата. Если после сокращения в числителе и/или в знаменателе не остаётся ни одной переменной, вместо одночлена следует вывести число 1.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=55%><b>input.txt</b></td>
    		<td width=55%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>2 1
x*x^7*x
x*y*z
y^2*z
</pre></td>
    		<td valign="top"><pre>x^10
y
</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch463"></a><p class="statements_chapter_title"><B>Problem G.</B> Слишком вложенные скобки</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>Дана правильная последовательность из круглых скобок. Требуется удалить из неё все скобки, находящиеся на глубине вложенности N и более. Например, в последовательности <font size="3" face="Tahoma">(()((<b>()(())()</b>)))(((<b>()</b>)))</font> выделены скобки, вложенные на 3 и более уровней.</p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Первая строка входного файла содержит число N (1 &lt;= N &lt;= 5000). Вторая строка содержит  правильную скобочную последовательность длиной от 2 до 10000 символов.</p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>Выходной файл должен содержать укороченную скобочную последовательность.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=70%><b>input.txt</b></td>
    		<td width=30%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>2
()(())
</pre></td>
    		<td valign="top"><pre>()(())</pre></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>3
(()((()(())())))(((())))
</pre></td>
    		<td valign="top"><pre>(()(()))((()))</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch464"></a><p class="statements_chapter_title"><B>Problem H.</B> Разнообразный куб</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
	Даны восемь символов из диапазона от "A" до "Z". Некоторые из них могут совпадать. Требуется определить, можно ли расположить эти символы в вершинах куба таким образом, чтобы на соседних (т. е. соединенных ребром) вершинах оказались разные символы    </p>
	<img src="http://informatics.mccme.ru/moodle/file.php/28/pic2.JPG">
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Во входном файле находится строка из восьми заглавных латинских букв. </p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>Выходной файл должен содержать целое число 1, если расположение возможно, и 0 (нуль) в противном случае.</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>ABCEABCE</pre></td>
    		<td valign="top"><pre>1</pre></td>
    	</tr>
    </table>
</div><div class="statements_chapter"><a name="ch465"></a><p class="statements_chapter_title"><B>Problem I.</B> Пеленг НЛО</p>    <table>
    	<tr>
		<td width=80%>Имя входного файла:</td>
                <td width=20%>input.txt</td>
	</tr>
    	<tr>
		<td width=80%>Имя выходного файла:</td>
                <td width=20%>output.txt</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по времени:</td>
                <td width=20%>2 секунды</td>
	</tr>
    	<tr>
		<td width=80%>Ограничение по памяти:</td>
                <td width=20%>64 MB</td>
	</tr>
    </table>

    <p>
Два радара, расположенные в точках с координатами (0, 0) и (100, 0), обнаружили неопознанный объект. По таинственной причине, связанной, возможно, с внеземной природой объекта, радары оказались способны определить только направление на объект (пеленг), но не расстояние до объекта. Пеленг измеряется в градусах, против часовой стрелки, начиная от направления "на восток" (т. е. пеленг второго радара относительно первого равен 0°, пеленг первого радара относительно второго - 180°).</p>
<p>Требуется найти координаты НЛО или определить, что это невозможно.</p>
<img src="http://informatics.mccme.ru/moodle/file.php/28/pic3.JPG">
    </p>
    <p><strong><i>Формат входных данных</i></strong></p>
    <p>Во входном файле содержатся вещественные числа a и b (0 &lt;= a, b < 360), разделенные пробелами. </p>
    <p><strong><i>Формат выходных данных</i></strong></p>
    <p>В выходном файле должны содержаться два вещественных числа, x и y, представляющие координаты объекта с точностью до 4 знаков после запятой. Если определить координаты невозможно, следует вывести два числа 0 (нуль).</p>
    <p><strong><i>Пример</i></strong></p>
    <table>
    	<tr>
    		<td width=50%><b>input.txt</b></td>
    		<td width=50%><b>output.txt</b></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>45.1 135.0</pre></td>
    		<td valign="top"><pre>49.9127 50.0873</pre></td>
    	</tr>
    	<tr>
    		<td valign="top"><pre>135.0 45.0</pre></td>
    		<td valign="top"><pre>0 0</pre></td>
    	</tr>
    </table>
</div></body> </html>